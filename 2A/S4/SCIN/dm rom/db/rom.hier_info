|processeur
clk => compteur_modulo:compteur_binaire.clk
clk => single_port_rom:romData.clk
clk => Registre:regC.clk
clk => Registre:regZ.clk
clk => Registre:regACCU.clk
clk => single_port_ram:RamData.clk
clk => registre2_4bits:registreInst.clk
clk => DecodeurInstruction:decodeur.clk


|processeur|compteur_modulo:compteur_binaire
clk => TC~reg0.CLK
clk => \clk_proc:count[0].CLK
clk => \clk_proc:count[1].CLK
clk => \clk_proc:count[2].CLK
clk => \clk_proc:count[3].CLK
clk => \clk_proc:count[4].CLK
clk => \clk_proc:count[5].CLK
clk => \clk_proc:count[6].CLK
load => count.OUTPUTSELECT
load => count.OUTPUTSELECT
load => count.OUTPUTSELECT
load => count.OUTPUTSELECT
load => count.OUTPUTSELECT
load => count.OUTPUTSELECT
load => count.OUTPUTSELECT
load => TC.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => TC~reg0.ENA
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
preset[0] => count.DATAA
preset[1] => count.DATAA
preset[2] => count.DATAA
preset[3] => count.DATAA
preset[4] => count.DATAA
preset[5] => count.DATAA
preset[6] => count.DATAA
dout[0] <= \clk_proc:count[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= \clk_proc:count[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= \clk_proc:count[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= \clk_proc:count[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= \clk_proc:count[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= \clk_proc:count[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= \clk_proc:count[6].DB_MAX_OUTPUT_PORT_TYPE
TC <= TC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|single_port_rom:romData
clk => ~NO_FANOUT~
addr[0] => rom.RADDR
addr[1] => rom.RADDR1
addr[2] => rom.RADDR2
addr[3] => rom.RADDR3
addr[4] => rom.RADDR4
addr[5] => rom.RADDR5
addr[6] => rom.RADDR6
q[0] <= rom.DATAOUT
q[1] <= rom.DATAOUT1
q[2] <= rom.DATAOUT2
q[3] <= rom.DATAOUT3
q[4] <= rom.DATAOUT4
q[5] <= rom.DATAOUT5
q[6] <= rom.DATAOUT6
q[7] <= rom.DATAOUT7


|processeur|MultiplexeurNbits:multiRomRam
IN0[0] => Sortie.DATAB
IN0[1] => Sortie.DATAB
IN0[2] => Sortie.DATAB
IN0[3] => Sortie.DATAB
IN1[0] => Sortie.DATAA
IN1[1] => Sortie.DATAA
IN1[2] => Sortie.DATAA
IN1[3] => Sortie.DATAA
Selecteur => Sortie.OUTPUTSELECT
Selecteur => Sortie.OUTPUTSELECT
Selecteur => Sortie.OUTPUTSELECT
Selecteur => Sortie.OUTPUTSELECT
Sortie[0] <= Sortie.DB_MAX_OUTPUT_PORT_TYPE
Sortie[1] <= Sortie.DB_MAX_OUTPUT_PORT_TYPE
Sortie[2] <= Sortie.DB_MAX_OUTPUT_PORT_TYPE
Sortie[3] <= Sortie.DB_MAX_OUTPUT_PORT_TYPE


|processeur|alu4bitWith3bitOp:Alui
op1[0] => Add0.IN4
op1[0] => res.IN0
op1[0] => res.IN0
op1[0] => Mux4.IN7
op1[1] => Add0.IN3
op1[1] => res.IN0
op1[1] => res.IN0
op1[1] => Mux3.IN7
op1[2] => Add0.IN2
op1[2] => res.IN0
op1[2] => res.IN0
op1[2] => Mux2.IN7
op1[3] => Add0.IN1
op1[3] => res.IN0
op1[3] => res.IN0
op1[3] => Mux1.IN7
op2[0] => Add0.IN8
op2[0] => res.IN1
op2[0] => res.IN1
op2[1] => Add0.IN7
op2[1] => res.IN1
op2[1] => res.IN1
op2[2] => Add0.IN6
op2[2] => res.IN1
op2[2] => res.IN1
op2[3] => Add0.IN5
op2[3] => res.IN1
op2[3] => res.IN1
en_alu => res[0].LATCH_ENABLE
en_alu => res[1].LATCH_ENABLE
en_alu => res[2].LATCH_ENABLE
en_alu => res[3].LATCH_ENABLE
en_alu => res[4].LATCH_ENABLE
en_alu => z$latch.LATCH_ENABLE
operator[0] => Mux0.IN10
operator[0] => Mux1.IN10
operator[0] => Mux2.IN10
operator[0] => Mux3.IN10
operator[0] => Mux4.IN10
operator[0] => Mux5.IN10
operator[1] => Mux0.IN9
operator[1] => Mux1.IN9
operator[1] => Mux2.IN9
operator[1] => Mux3.IN9
operator[1] => Mux4.IN9
operator[1] => Mux5.IN9
operator[2] => Mux0.IN8
operator[2] => Mux1.IN8
operator[2] => Mux2.IN8
operator[2] => Mux3.IN8
operator[2] => Mux4.IN8
operator[2] => Mux5.IN8
c <= res[4].DB_MAX_OUTPUT_PORT_TYPE
z <= z$latch.DB_MAX_OUTPUT_PORT_TYPE
AccU[0] <= res[0].DB_MAX_OUTPUT_PORT_TYPE
AccU[1] <= res[1].DB_MAX_OUTPUT_PORT_TYPE
AccU[2] <= res[2].DB_MAX_OUTPUT_PORT_TYPE
AccU[3] <= res[3].DB_MAX_OUTPUT_PORT_TYPE


|processeur|Registre:regC
d[0] => bascule:gen:0:u.d
reset => bascule:gen:0:u.reset
clk => bascule:gen:0:u.clk
enable => bascule:gen:0:u.enable
s[0] <= bascule:gen:0:u.q


|processeur|Registre:regC|bascule:\gen:0:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|Registre:regZ
d[0] => bascule:gen:0:u.d
reset => bascule:gen:0:u.reset
clk => bascule:gen:0:u.clk
enable => bascule:gen:0:u.enable
s[0] <= bascule:gen:0:u.q


|processeur|Registre:regZ|bascule:\gen:0:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|Registre:regACCU
d[0] => bascule:gen:0:u.d
d[1] => bascule:gen:1:u.d
d[2] => bascule:gen:2:u.d
d[3] => bascule:gen:3:u.d
reset => bascule:gen:0:u.reset
reset => bascule:gen:1:u.reset
reset => bascule:gen:2:u.reset
reset => bascule:gen:3:u.reset
clk => bascule:gen:0:u.clk
clk => bascule:gen:1:u.clk
clk => bascule:gen:2:u.clk
clk => bascule:gen:3:u.clk
enable => bascule:gen:0:u.enable
enable => bascule:gen:1:u.enable
enable => bascule:gen:2:u.enable
enable => bascule:gen:3:u.enable
s[0] <= bascule:gen:0:u.q
s[1] <= bascule:gen:1:u.q
s[2] <= bascule:gen:2:u.q
s[3] <= bascule:gen:3:u.q


|processeur|Registre:regACCU|bascule:\gen:0:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|Registre:regACCU|bascule:\gen:1:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|Registre:regACCU|bascule:\gen:2:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|Registre:regACCU|bascule:\gen:3:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|single_port_ram:RamData
clk => ram~8.CLK
clk => ram~0.CLK
clk => ram~1.CLK
clk => ram~2.CLK
clk => ram~3.CLK
clk => ram~4.CLK
clk => ram~5.CLK
clk => ram~6.CLK
clk => ram~7.CLK
clk => ram.CLK0
addr[0] => ram~3.DATAIN
addr[0] => ram.WADDR
addr[0] => ram.RADDR
addr[1] => ram~2.DATAIN
addr[1] => ram.WADDR1
addr[1] => ram.RADDR1
addr[2] => ram~1.DATAIN
addr[2] => ram.WADDR2
addr[2] => ram.RADDR2
addr[3] => ram~0.DATAIN
addr[3] => ram.WADDR3
addr[3] => ram.RADDR3
data[0] => ram~7.DATAIN
data[0] => ram.DATAIN
data[1] => ram~6.DATAIN
data[1] => ram.DATAIN1
data[2] => ram~5.DATAIN
data[2] => ram.DATAIN2
data[3] => ram~4.DATAIN
data[3] => ram.DATAIN3
we => ram~8.DATAIN
we => ram.WE
q[0] <= ram.DATAOUT
q[1] <= ram.DATAOUT1
q[2] <= ram.DATAOUT2
q[3] <= ram.DATAOUT3


|processeur|registre2_4bits:registreInst
d_faible[0] => registre:regFaible.d[0]
d_faible[1] => registre:regFaible.d[1]
d_faible[2] => registre:regFaible.d[2]
d_faible[3] => registre:regFaible.d[3]
d_fort[0] => registre:regFort.d[0]
d_fort[1] => registre:regFort.d[1]
d_fort[2] => registre:regFort.d[2]
d_fort[3] => registre:regFort.d[3]
clk => registre:regFort.clk
clk => registre:regFaible.clk
ld_ir_lsn => tmp.IN0
ld_ir => tmp.IN1
ld_ir => registre:regFort.enable
ir_faible[0] <= registre:regFaible.s[0]
ir_faible[1] <= registre:regFaible.s[1]
ir_faible[2] <= registre:regFaible.s[2]
ir_faible[3] <= registre:regFaible.s[3]
ir_fort[0] <= registre:regFort.s[0]
ir_fort[1] <= registre:regFort.s[1]
ir_fort[2] <= registre:regFort.s[2]
ir_fort[3] <= registre:regFort.s[3]


|processeur|registre2_4bits:registreInst|Registre:regFort
d[0] => bascule:gen:0:u.d
d[1] => bascule:gen:1:u.d
d[2] => bascule:gen:2:u.d
d[3] => bascule:gen:3:u.d
reset => bascule:gen:0:u.reset
reset => bascule:gen:1:u.reset
reset => bascule:gen:2:u.reset
reset => bascule:gen:3:u.reset
clk => bascule:gen:0:u.clk
clk => bascule:gen:1:u.clk
clk => bascule:gen:2:u.clk
clk => bascule:gen:3:u.clk
enable => bascule:gen:0:u.enable
enable => bascule:gen:1:u.enable
enable => bascule:gen:2:u.enable
enable => bascule:gen:3:u.enable
s[0] <= bascule:gen:0:u.q
s[1] <= bascule:gen:1:u.q
s[2] <= bascule:gen:2:u.q
s[3] <= bascule:gen:3:u.q


|processeur|registre2_4bits:registreInst|Registre:regFort|bascule:\gen:0:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFort|bascule:\gen:1:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFort|bascule:\gen:2:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFort|bascule:\gen:3:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFaible
d[0] => bascule:gen:0:u.d
d[1] => bascule:gen:1:u.d
d[2] => bascule:gen:2:u.d
d[3] => bascule:gen:3:u.d
reset => bascule:gen:0:u.reset
reset => bascule:gen:1:u.reset
reset => bascule:gen:2:u.reset
reset => bascule:gen:3:u.reset
clk => bascule:gen:0:u.clk
clk => bascule:gen:1:u.clk
clk => bascule:gen:2:u.clk
clk => bascule:gen:3:u.clk
enable => bascule:gen:0:u.enable
enable => bascule:gen:1:u.enable
enable => bascule:gen:2:u.enable
enable => bascule:gen:3:u.enable
s[0] <= bascule:gen:0:u.q
s[1] <= bascule:gen:1:u.q
s[2] <= bascule:gen:2:u.q
s[3] <= bascule:gen:3:u.q


|processeur|registre2_4bits:registreInst|Registre:regFaible|bascule:\gen:0:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFaible|bascule:\gen:1:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFaible|bascule:\gen:2:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|registre2_4bits:registreInst|Registre:regFaible|bascule:\gen:3:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|DecodeurInstruction:decodeur
c => DecodeurInstructionStateLogic:stateLogic.c
c => DecodeurInstructionOutputLogic:outputLogic.c
z => DecodeurInstructionStateLogic:stateLogic.z
z => DecodeurInstructionOutputLogic:outputLogic.z
clk => registre:stateReg.clk
ir[0] => DecodeurInstructionStateLogic:stateLogic.ir[0]
ir[0] => DecodeurInstructionOutputLogic:outputLogic.ir[0]
ir[1] => DecodeurInstructionStateLogic:stateLogic.ir[1]
ir[1] => DecodeurInstructionOutputLogic:outputLogic.ir[1]
ir[2] => DecodeurInstructionStateLogic:stateLogic.ir[2]
ir[2] => DecodeurInstructionOutputLogic:outputLogic.ir[2]
ir[3] => DecodeurInstructionStateLogic:stateLogic.ir[3]
ir[3] => DecodeurInstructionOutputLogic:outputLogic.ir[3]
ir[4] => DecodeurInstructionStateLogic:stateLogic.ir[4]
ir[4] => DecodeurInstructionOutputLogic:outputLogic.ir[4]
ir[5] => DecodeurInstructionStateLogic:stateLogic.ir[5]
ir[5] => DecodeurInstructionOutputLogic:outputLogic.ir[5]
ir[6] => DecodeurInstructionStateLogic:stateLogic.ir[6]
ir[6] => DecodeurInstructionOutputLogic:outputLogic.ir[6]
ir[7] => DecodeurInstructionStateLogic:stateLogic.ir[7]
ir[7] => DecodeurInstructionOutputLogic:outputLogic.ir[7]
jump_pc <= DecodeurInstructionOutputLogic:outputLogic.jump_pc
inc_pc <= DecodeurInstructionOutputLogic:outputLogic.inc_pc
ld_ir <= DecodeurInstructionOutputLogic:outputLogic.ld_ir
ld_ir_lsn <= DecodeurInstructionOutputLogic:outputLogic.ld_ir_lsn
writ <= DecodeurInstructionOutputLogic:outputLogic.writ
en_ALU <= DecodeurInstructionOutputLogic:outputLogic.en_alu
aop[0] <= DecodeurInstructionOutputLogic:outputLogic.aop[0]
aop[1] <= DecodeurInstructionOutputLogic:outputLogic.aop[1]
aop[2] <= DecodeurInstructionOutputLogic:outputLogic.aop[2]


|processeur|DecodeurInstruction:decodeur|DecodeurInstructionStateLogic:stateLogic
c => ~NO_FANOUT~
z => ~NO_FANOUT~
ir[0] => ~NO_FANOUT~
ir[1] => ~NO_FANOUT~
ir[2] => ~NO_FANOUT~
ir[3] => ~NO_FANOUT~
ir[4] => ~NO_FANOUT~
ir[5] => ~NO_FANOUT~
ir[6] => ~NO_FANOUT~
ir[7] => ~NO_FANOUT~
etat[0] => Equal0.IN1
etat[0] => Equal1.IN1
etat[1] => Equal0.IN0
etat[1] => Equal1.IN0
etat_suivant[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
etat_suivant[1] <= etat_suivant.DB_MAX_OUTPUT_PORT_TYPE


|processeur|DecodeurInstruction:decodeur|DecodeurInstructionOutputLogic:outputLogic
c => inc_pc.DATAB
z => inc_pc.DATAB
ir[0] => Equal9.IN7
ir[0] => Equal10.IN7
ir[0] => Equal11.IN6
ir[0] => Equal12.IN7
ir[1] => Equal9.IN6
ir[1] => Equal10.IN6
ir[1] => Equal11.IN7
ir[1] => Equal12.IN6
ir[2] => Equal9.IN5
ir[2] => Equal10.IN5
ir[2] => Equal11.IN5
ir[2] => Equal12.IN5
ir[3] => Equal9.IN4
ir[3] => Equal10.IN4
ir[3] => Equal11.IN4
ir[3] => Equal12.IN4
ir[4] => Equal2.IN2
ir[4] => Equal3.IN3
ir[4] => Equal4.IN3
ir[4] => Equal5.IN3
ir[4] => Equal6.IN2
ir[4] => Equal7.IN1
ir[4] => Equal8.IN3
ir[4] => Equal9.IN3
ir[4] => Equal10.IN3
ir[4] => Equal11.IN3
ir[4] => Equal12.IN3
ir[5] => Equal2.IN1
ir[5] => Equal3.IN2
ir[5] => Equal4.IN2
ir[5] => Equal5.IN1
ir[5] => Equal6.IN3
ir[5] => Equal7.IN3
ir[5] => Equal8.IN2
ir[5] => Equal9.IN2
ir[5] => Equal10.IN2
ir[5] => Equal11.IN2
ir[5] => Equal12.IN2
ir[6] => Equal2.IN3
ir[6] => Equal3.IN1
ir[6] => Equal4.IN1
ir[6] => Equal5.IN2
ir[6] => Equal6.IN1
ir[6] => Equal7.IN2
ir[6] => Equal8.IN1
ir[6] => Equal9.IN1
ir[6] => Equal10.IN1
ir[6] => Equal11.IN1
ir[6] => Equal12.IN1
ir[7] => jump_pc.DATAA
ir[7] => Equal2.IN0
ir[7] => Equal3.IN0
ir[7] => Equal4.IN0
ir[7] => Equal5.IN0
ir[7] => Equal6.IN0
ir[7] => Equal7.IN0
ir[7] => Equal8.IN0
ir[7] => Equal9.IN0
ir[7] => Equal10.IN0
ir[7] => Equal11.IN0
ir[7] => Equal12.IN0
etat[0] => Equal0.IN1
etat[0] => Equal1.IN1
etat[1] => Equal0.IN0
etat[1] => Equal1.IN0
jump_pc <= jump_pc.DB_MAX_OUTPUT_PORT_TYPE
inc_pc <= inc_pc.DB_MAX_OUTPUT_PORT_TYPE
ld_ir <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
ld_ir_lsn <= ld_ir_lsn.DB_MAX_OUTPUT_PORT_TYPE
writ <= writ.DB_MAX_OUTPUT_PORT_TYPE
en_alu <= en_alu.DB_MAX_OUTPUT_PORT_TYPE
aop[0] <= aop.DB_MAX_OUTPUT_PORT_TYPE
aop[1] <= aop.DB_MAX_OUTPUT_PORT_TYPE
aop[2] <= aop.DB_MAX_OUTPUT_PORT_TYPE


|processeur|DecodeurInstruction:decodeur|Registre:stateReg
d[0] => bascule:gen:0:u.d
d[1] => bascule:gen:1:u.d
reset => bascule:gen:0:u.reset
reset => bascule:gen:1:u.reset
clk => bascule:gen:0:u.clk
clk => bascule:gen:1:u.clk
enable => bascule:gen:0:u.enable
enable => bascule:gen:1:u.enable
s[0] <= bascule:gen:0:u.q
s[1] <= bascule:gen:1:u.q


|processeur|DecodeurInstruction:decodeur|Registre:stateReg|bascule:\gen:0:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processeur|DecodeurInstruction:decodeur|Registre:stateReg|bascule:\gen:1:u
clk => q~reg0.CLK
enable => q.OUTPUTSELECT
enable => q~reg0.ENA
reset => q~reg0.ALOAD
reset => q.IN0
preset => q.IN1
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


