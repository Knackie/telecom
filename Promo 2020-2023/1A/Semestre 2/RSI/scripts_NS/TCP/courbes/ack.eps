%!PS-Adobe-2.0 EPSF-2.0
%%Title: courbes/ack.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Apr 12 10:16:09 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -93 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 280 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1260 840 M
5464 0 V
1.000 UL
LTb
1260 840 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 1323 M
3721 0 V
1575 0 R
168 0 V
1.000 UL
LTb
1260 1323 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 1806 M
5464 0 V
1.000 UL
LTb
1260 1806 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 2289 M
5464 0 V
1.000 UL
LTb
1260 2289 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 15) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 2772 M
5464 0 V
1.000 UL
LTb
1260 2772 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 3255 M
5464 0 V
1.000 UL
LTb
1260 3255 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 25) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 3738 M
5464 0 V
1.000 UL
LTb
1260 3738 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 4221 M
5464 0 V
1.000 UL
LTb
1260 4221 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 35) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 4704 M
5464 0 V
1.000 UL
LTb
1260 4704 M
63 0 V
5401 0 R
-63 0 V
-5569 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
1260 840 M
0 3864 V
1.000 UL
LTb
1260 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2041 840 M
0 3864 V
1.000 UL
LTb
2041 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 0.5) Cshow
1.000 UL
LTb
1.000 UL
LTa
2821 840 M
0 3864 V
1.000 UL
LTb
2821 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTa
3602 840 M
0 3864 V
1.000 UL
LTb
3602 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 1.5) Cshow
1.000 UL
LTb
1.000 UL
LTa
4382 840 M
0 3864 V
1.000 UL
LTb
4382 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTa
5163 840 M
0 63 V
0 560 R
0 3241 V
1.000 UL
LTb
5163 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 2.5) Cshow
1.000 UL
LTb
1.000 UL
LTa
5943 840 M
0 63 V
0 560 R
0 3241 V
1.000 UL
LTb
5943 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 3) Cshow
1.000 UL
LTb
1.000 UL
LTa
6724 840 M
0 3864 V
1.000 UL
LTb
6724 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
( 3.5) Cshow
1.000 UL
LTb
1.000 UL
LTb
1260 840 M
5464 0 V
0 3864 V
-5464 0 V
0 -3864 V
LTb
280 2772 M
currentpoint gsave translate 90 rotate 0 0 M
(Numero de sequence) Cshow
grestore
LTb
3992 140 M
(temps) Cshow
1.000 UP
10.000 UL
LT0
LTb
5485 1323 M
(seq) Rshow
LT0
6020 1323 Pnt
1260 840 Pnt
1605 937 Pnt
1605 1033 Pnt
1967 1130 Pnt
1967 1226 Pnt
1983 1323 Pnt
1983 1420 Pnt
2329 1516 Pnt
2329 1613 Pnt
2345 1709 Pnt
2345 1806 Pnt
2361 1903 Pnt
2361 1999 Pnt
2378 2096 Pnt
2378 2192 Pnt
2691 2289 Pnt
2691 2386 Pnt
2707 2482 Pnt
2707 2579 Pnt
2723 2675 Pnt
2723 2772 Pnt
2740 2869 Pnt
2740 2965 Pnt
2756 3062 Pnt
2772 3158 Pnt
3053 1903 Pnt
3415 2192 Pnt
3415 2289 Pnt
3777 2675 Pnt
3777 2772 Pnt
3777 2869 Pnt
3793 2965 Pnt
4139 3062 Pnt
4139 3158 Pnt
4155 3255 Pnt
4171 3352 Pnt
4171 3448 Pnt
4501 3545 Pnt
4501 3641 Pnt
4501 3738 Pnt
4517 3835 Pnt
4550 3931 Pnt
4566 4028 Pnt
4863 4124 Pnt
4879 4221 Pnt
4895 4318 Pnt
4912 4414 Pnt
4928 4511 Pnt
5225 3835 Pnt
5587 4607 Pnt
5587 4704 Pnt
10.000 UL
LT1
LTb
5485 1043 M
(ack) Rshow
LT1
6020 1043 Pnt
1589 840 Pnt
1951 937 Pnt
1967 1033 Pnt
2313 1130 Pnt
2329 1226 Pnt
2346 1323 Pnt
2362 1420 Pnt
2675 1516 Pnt
2691 1613 Pnt
2708 1709 Pnt
2724 1806 Pnt
2740 1806 Pnt
2756 1806 Pnt
3037 1806 Pnt
3053 1806 Pnt
3070 1806 Pnt
3086 1806 Pnt
3102 1806 Pnt
3118 1806 Pnt
3135 1806 Pnt
3399 2096 Pnt
3761 2579 Pnt
3777 2579 Pnt
4123 2772 Pnt
4139 2772 Pnt
4156 2965 Pnt
4485 3158 Pnt
4501 3158 Pnt
4518 3255 Pnt
4534 3352 Pnt
4550 3448 Pnt
4847 3545 Pnt
4863 3641 Pnt
4880 3738 Pnt
4896 3738 Pnt
4912 3738 Pnt
5209 3738 Pnt
5225 3738 Pnt
5242 3738 Pnt
5258 3738 Pnt
5274 3738 Pnt
5571 4511 Pnt
5933 4607 Pnt
5949 4704 Pnt
1.000 UL
LTb
1260 840 M
5464 0 V
0 3864 V
-5464 0 V
0 -3864 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
